{
  "name": "vscode-function-separators",
  "displayName": "Function Separators",
  "description": "Add simple comment line separators above each function to make them stand out.",
  "repository": {
    "type": "git",
    "url": "https://github.com/mark-hahn/vscode-function-separators.git"
  },
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.104.0"
  },
  "publisher": "eridien",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-function-separators.insertSeparators",
        "title": "Insert Separators Above Functions"
      },
      {
        "command": "vscode-function-separators.removeSeparators",
        "title": "Remove Function Separators"
      },
      {
        "command": "vscode-function-separators.jumpNext",
        "title": "Jump To Next Function Separator"
      },
      {
        "command": "vscode-function-separators.jumpPrev",
        "title": "Jump To Previous Function Separator"
      }
    ],
    "keybindings": [
      {
        "command": "vscode-function-separators.insertSeparators",
        "key": "ctrl+alt+shift+/",
        "mac":  "cmd+alt+shift+/",
        "when": "editorTextFocus"
      },
      {
        "command": "vscode-function-separators.removeSeparators",
        "key": "ctrl+alt+shift+'",
        "mac":  "cmd+alt+shift+'",
        "when": "editorTextFocus"
      },
      {
        "command": "vscode-function-separators.jumpNext",
        "key": "ctrl+alt+shift+.",
        "mac":  "cmd+alt+shift+.",
        "when": "editorTextFocus"
      },
      {
        "command": "vscode-function-separators.jumpPrev",
        "key": "ctrl+alt+shift+,",
        "mac":  "cmd+alt+shift+,",
        "when": "editorTextFocus"
      }
    ],
    "configuration": {
      "properties": {
        "function-separators.minFuncHeight": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 1024,
          "order": 1,
          "title": "Minimum Function Height",
          "description": "Only add separators to functions with at least this many lines of code."
        },
        "function-separators.includeNested": {
          "type": "boolean",
          "default": false,
          "order": 2,
          "title": "Include Nested Functions",
          "description": "Include nested functions when adding separators."
        },
        "function-separators.blankLinesAbove": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 1024,
          "order": 3,
          "title": "Blank Lines Above",
          "description": "Number of blank lines to add above the function separator."
        },
        "function-separators.blankLinesBelow": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 1024,
          "order": 4,
          "title": "Blank Lines Below",
          "description": "Number of blank lines to add below the function separator."
        },
        "function-separators.fillString": {
          "type": "string",
          "default": "=",
          "order": 5,
          "title": "Function Separator Fill String",
          "description": "The string repeated to the left and right of the function name. It may be multiple characters."
        },
        "function-separators.indent": {
          "type": "number",
          "default":    0,
          "minimum":   -1,
          "maximum": 1024,
          "order":      6,
          "title": "Function Separator Indent",
          "description": "Number of spaces to indent the function separator. -1 means match the function's indent."
        },
        "function-separators.width": {
          "type": "number",
          "default":   80,
          "minimum":   -1,
          "maximum": 1024,
          "order":      7,
          "title": "Width of Function Separator",
          "description": "Total width of the function separator including indentation. -1 means match the widest line in the file."
        },
        "function-separators.splitName": {
          "type": "boolean",
          "default":   true,
          "order":        8,
          "title": "Split Function Name",
          "description": "Split the function name into multiple words by _ and camelcase."
        },
        "function-separators.case": {
          "type":       "string",
          "order":             9,
          "default": "Uppercase",
          "enum": [ "Original", "Lowercase", "Capitalize", "Uppercase" ],
          "enumDescriptions": [
            "Keep the original case of the function name.",
            "Convert entire function name to lowercase.",
            "Capitalize each word in the function name.",
            "Convert entire function name to uppercase."
          ],
          "title": "Function Name Case",
          "description": "Controls the case of the function name."
        },
        "function-separators.fileWrap": {
          "type":   "boolean",
          "default":     true,
          "order":         10,
          "title": "Jump Between Files",
          "description": "Jump to the next file when passing the end of the current file instead of wrapping to the top of the current file."
        }
      }
    }
  },
  "scripts": {
    "build": "npm run compile",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p .",
    "watch": "tsc -p . -w",
    "rebuild": "rm -rf node_modules package-lock.json && npm install",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext .ts,.tsx",
    "test": "vscode-test",
    "lint:watch": "echo 'eslint:watch not used , running eslint extension instead'"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.104.0",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.34.0",
    "typescript": "^5.9.2"
  },
  "dependencies": {
    "web-tree-sitter": "^0.25.9"
  }
}
